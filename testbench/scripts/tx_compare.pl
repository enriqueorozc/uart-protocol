#!/usr/bin/env perl

###############################################################################
## PROJECT: UART Communication System with Error Detection
###############################################################################
## FILENAME: tx_compare.pl
## AUTHOR: Enrique Orozco Jr. <enrique-orozco@outlook.com>
## DESCRIPTION: This script compares the ModelSim simulation output against
## the random data vectors generated by the generate_stimulus script to
## verify that the transmitter is working properly.
###############################################################################

use strict;
use warnings;

use feature 'say';
use File::Path 'make_path';

sub correct_parity {
  my $binary_str = sprintf("%b", $_[0]);

  # Count # of 1's:
  my $oneCount = 0;
  for (my $count = 0; $count < length($binary_str); $count++) {
    if (substr($binary_str, $count, 1) eq '1') {
      $oneCount++;
    }
  }

  return ($oneCount % 2) ? 1 : 0;
}

# Check Output Directory + Destination File:
my $OUTPUT_DIR = "../outputs";
make_path($OUTPUT_DIR) unless -d $OUTPUT_DIR;
my $DEST_FILE = "../outputs/simCompare.txt";

# Open the Destination File:
open (FHW, '>', $DEST_FILE);

# Open & Read the Stimulus File:
my $STIMULUS_FILE = '../outputs/stimulus.txt';
open(FH1, '<', $STIMULUS_FILE) or die 'stimulus.txt does not exist';

my @passed_values;
while ( <FH1> ) {
  push(@passed_values, $_);
}
chomp @passed_values;

# Open the Simulation Output File:
my $SIMULATION_FILE = '../outputs/simOutput.txt';
open(FH2, '<', $SIMULATION_FILE) or die "simOutput.txt does not exist";

my $count = 0;
while ( <FH2> ) {

  my @frame = split /-/, $_;
  chomp @frame;
  
  # data-in | data-out | parity | STATUS
  my $passed = $passed_values[$count];
  my $recieved = $frame[0];

  my $parity = $frame[1];
  my $correct = correct_parity($passed);

  print FHW "data-in: $passed | ";
  print FHW "data-out: $recieved | ";
  print FHW "parity: $parity | ";

  if ($parity == $correct) {
    say FHW "PASSED";
  } else {
    say FHW "FAILED";
  }

  $count++;
}

# Close Files:
close(FHW);
close(FH1);
close(FH2);

